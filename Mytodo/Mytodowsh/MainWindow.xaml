<Window x:Class="Mytodowsh.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mytodowsh" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <materialDesign:DialogHost DialogTheme="Inherit"
                             Identifier="RootDialog"
                             SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                    <TextBox x:Name="DemoItemsSearchBox"
                   Width="200"
                   Margin="16,4"
                   materialDesign:HintAssist.Hint="Search"
                   materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                   materialDesign:TextFieldAssist.HasClearButton="True"
                   DockPanel.Dock="Top"
                   Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                   Style="{StaticResource MaterialDesignOutlinedTextBox}"/>

                    <ListBox x:Name="DemoItemsListBox"
                   Margin="0,16,0,16"
                   AutomationProperties.Name="DemoPagesListBox"
                   ItemsSource="{Binding DemoItems}"
                   PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                   SelectedIndex="{Binding SelectedIndex}"
                   SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                   Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
                        <ListBox.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Margin="24,4,0,4"
                           AutomationProperties.AutomationId="DemoItemPage"
                           Text="{Binding Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  DockPanel.Dock="Top"
                                  Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="MenuToggleButton"
                            AutomationProperties.Name="HamburgerToggleButton"
                            Click="MenuToggleButton_OnClick"
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button Margin="24,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding MovePrevCommand}"
                      Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Previous Item" />

                            <Button Margin="16,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding MoveNextCommand}"
                      Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Next Item" />

                            <Button Margin="16,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding HomeCommand}"
                      Content="{materialDesign:PackIcon Kind=Home,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Home" />
                        </StackPanel>

                        <materialDesign:PopupBox DockPanel.Dock="Right"
                                     PlacementMode="BottomAndAlignRightEdges"
                                     StaysOpen="False">

                            <StackPanel>
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Margin="0,0,10,0" Text="Light" />
                                    <ToggleButton x:Name="DarkModeToggleButton"
                                Grid.Column="1"
                                Click="MenuDarkModeButton_Click" />
                                    <TextBlock Grid.Column="2"
                             Margin="10,0,0,0"
                             Text="Dark" />
                                    <TextBlock Grid.Row="1"
                             Margin="0,10,10,0"
                             Text="Enabled" />
                                    <ToggleButton x:Name="ControlsEnabledToggleButton"
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="0,10,0,0"
                                IsChecked="{Binding ControlsEnabled}" />

                                    <TextBlock Grid.Row="2"
                             Margin="0,10,10,0"
                             Text="LTR" />
                                    <ToggleButton x:Name="FlowDirectionToggleButton"
                                Grid.Row="2"
                                Grid.Column="1"
                                Margin="0,10,0,0"
                                Click="FlowDirectionButton_Click" />
                                    <TextBlock Grid.Row="2"
                             Grid.Column="2"
                             Margin="10,10,0,0"
                             Text="RTL" />
                                </Grid>

                                <Separator />

                                <Button Click="MenuPopupButton_OnClick" Content="Hello World" />

                                <Button Click="MenuPopupButton_OnClick" Content="Nice Popup" />

                                <Button Content="Can't Touch This" IsEnabled="False" />

                                <Separator />

                                <Button Click="MenuPopupButton_OnClick" Content="Goodbye" />
                            </StackPanel>
                        </materialDesign:PopupBox>

                        <TextBlock Margin="-152,0,0,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       AutomationProperties.Name="Material Design In XAML Toolkit"
                       FontSize="22"
                       Text="Material Design In XAML Toolkit" />
                    </DockPanel>
                </materialDesign:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <domain:DocumentationLinks DataContext="{Binding SelectedItem}" />

                    <ScrollViewer x:Name="MainScrollViewer"
                        Grid.Row="1"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}">
                        <ContentControl Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                            DataContext="{Binding SelectedItem}"
                            DataContextChanged="OnSelectedItemChanged" />
                    </ScrollViewer>

                    <materialDesign:Snackbar x:Name="MainSnackbar"
                                   Grid.Row="1"
                                   MessageQueue="{materialDesign:MessageQueue}" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
